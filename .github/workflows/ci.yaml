name: CI build

on:
  push:
    branches:
      - main
      - vnext

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2019, ubuntu-latest ]
      fail-fast: false
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
        if: matrix.os == 'windows-2019'
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check
      - name: Upload snapshot
        # only upload from windows since only that build includes etw
        if: matrix.os == 'windows-2019'
        uses: actions/upload-artifact@v2
        with:
          path: agent/agent/build/libs/applicationinsights-agent-*-SNAPSHOT.jar

  setup-smoke-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - id: set-matrix
        # "grep -v skipWinNative" is used to skip the warning message "Skipping build of :etw:native because skipWinNative=true"
        run: echo "::set-output name=matrix::{\"module\":[\"$(./gradlew -q :smoke-tests:apps:listTestApps | grep -v skipWinNative | xargs echo | sed 's/ /","/g')\"]}"

  smoke-test:
    needs: setup-smoke-test-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.setup-smoke-test-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ matrix.module }}:smokeTest

  accept-pr:
    needs: [ build, smoke-test ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      # run this action to get workflow conclusion
      # You can get conclusion by env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Fail build
        if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure
        run: exit 1
