name: Reusable - Test

on:
  workflow_call:
    inputs:
      no-build-cache:
        type: boolean
        required: false

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        test-java-version:
          - 8
          - 11
          - 17
          - 18
        vm:
          - hotspot
          # TODO (trask) enable once profiler supports OpenJ9
          # - openj9
        os:
          - windows-2019
          - ubuntu-latest
      fail-fast: false
    steps:
      - name: Support long paths
        run: git config --system core.longpaths true
        if: matrix.os == 'windows-2019'

      - uses: actions/checkout@v3

      - id: setup-test-java
        name: Set up JDK ${{ matrix.test-java-version }}-${{ matrix.vm }} for running tests
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.vm == 'hotspot' && 'temurin' || 'adopt-openj9'}}
          java-version: ${{ matrix.test-java-version }}

      - name: Set up JDK for running Gradle
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check -PtestJavaVersion=${{ matrix.test-java-version }} -PtestJavaVM=${{ matrix.vm }} -Porg.gradle.java.installations.paths=${{ steps.setup-test-java.outputs.path }} -Porg.gradle.java.installations.auto-download=false ${{ inputs.no-build-cache && ' --no-build-cache' || '' }}
