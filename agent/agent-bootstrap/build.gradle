import com.microsoft.applicationinsights.build.tasks.PropsFileGen

apply from: "$buildScriptsDir/common-java.gradle"

repositories {
  // maven local is needed for locally built otel fork
  mavenLocal()
}

def sdkVersionFileDir = "$project.buildDir/src/generated/main/resources"

sourceSets {
  main {
    resources {
      srcDir sdkVersionFileDir
    }
  }
}

task generateVersionProperties(type: PropsFileGen) {
  targetFile = new File(sdkVersionFileDir, "ai.sdk-version.properties")
  property "version", project.version
}

processResources.dependsOn generateVersionProperties

dependencies {
  implementation("io.opentelemetry.javaagent:opentelemetry-javaagent-bootstrap:${versions.opentelemetryInstrumentationAlpha}") {
    exclude group: "org.slf4j", module: "slf4j-simple"
  }
  implementation "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api:${versions.opentelemetryInstrumentationAlpha}"
  implementation "io.opentelemetry.javaagent:opentelemetry-javaagent-api:${versions.opentelemetryInstrumentationAlpha}"
  implementation "ch.qos.logback:logback-classic:${versions.logback}"
  implementation "ch.qos.logback.contrib:logback-json-classic:${versions.logbackJson}"

  // not using gson because it has dependency on java.sql.*, which is not available in Java 9+ bootstrap class loader
  // only complaint so far about moshi is that it doesn"t give line numbers when there are json formatting errors
  implementation "com.squareup.moshi:moshi:${versions.moshi}"

  implementation project(path: ":etw:java")

  testImplementation platform("org.junit:junit-bom:${versions.junit}")
  testImplementation "org.junit.jupiter:junit-jupiter"
  testImplementation "org.assertj:assertj-core:${versions.assertj}"
  testImplementation "org.mockito:mockito-core:${versions.mockito}"
  testImplementation "uk.org.webcompere:system-stubs-jupiter:1.1.0"
}
