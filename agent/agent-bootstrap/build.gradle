import com.microsoft.applicationinsights.build.tasks.PropsFileGen

apply from: "$buildScriptsDir/common-java.gradle"

repositories {
    mavenLocal()
}

def sdkVersionFileDir = "$project.buildDir/src/generated/main/resources"

sourceSets {
    main {
        resources {
            srcDir sdkVersionFileDir
        }
    }
}

task generateVersionProperties(type: PropsFileGen) {
    targetFile = new File(sdkVersionFileDir, "ai.sdk-version.properties")
    property "version", project.version
}

processResources.dependsOn generateVersionProperties

dependencies {
    compile (group: 'io.opentelemetry.javaagent', name: 'opentelemetry-javaagent-bootstrap', version: versions.opentelemetryInstrumentationAlpha) {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    compile group: 'io.opentelemetry.instrumentation', name: 'opentelemetry-instrumentation-api', version: versions.opentelemetryInstrumentationAlpha
    compile group: 'io.opentelemetry.javaagent', name: 'opentelemetry-javaagent-api', version: versions.opentelemetryInstrumentationAlpha
    compile group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
    compile group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: versions.logbackJson

    // not using gson because it has dependency on java.sql.*, which is not available in Java 9+ bootstrap class loader
    // only complaint so far about moshi is that it doesn't give line numbers when there are json formatting errors
    compile 'com.squareup.moshi:moshi:1.9.3'

    compile(project(path: ':etw:java'))

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.github.stefanbirkner:system-rules:1.19.0'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.google.guava:guava:27.1-android'
}
