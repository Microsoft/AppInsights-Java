plugins {
  id "idea"

  id "com.github.johnrengelman.shadow" apply false

  id "org.owasp.dependencycheck" version "6.1.5"
  id "com.diffplug.spotless"
  id "net.ltgt.errorprone" apply false

  id "com.github.ben-manes.versions" version "0.42.0"
}

ext.buildScriptsDir = "$rootDir/gradle"

version = calcProjectVersion()
subprojects {
  version = rootProject.version
}

def calcProjectVersion() {
  def projectVersion = version;

  boolean isRelease = (System.properties["isRelease"] ?: "false").toBoolean()
  if (!isRelease) {
    projectVersion = projectVersion + "-SNAPSHOT"
    logger.info "This is NOT a release version; version updated to $projectVersion"
  }
  projectVersion
}

ext {
  isRelease = (System.properties["isRelease"] ?: "false").toBoolean()
}

spotless {
  // this formatting is applied at the root level, as some of these files are not in a submodules
  // and would be missed otherwise
  format 'misc', {
    target '.gitignore', '*.md', 'docs/**/*.md'
    indentWithSpaces()
    trimTrailingWhitespace()
    endWithNewline()
  }
}

allprojects {
  if (!it.path.startsWith(":smoke-tests")) {
    configurations {
      runtimeClasspath {
        resolutionStrategy.activateDependencyLocking()
      }
    }
  }

  task generateLockfiles {
    doFirst {
      assert gradle.startParameter.writeDependencyLocks
      // meaning you must run with --write-locks parameter
    }
    doLast {
      if (configurations.findByName("runtimeClasspath") != null) {
        configurations.runtimeClasspath.resolve()
      }
    }
  }
}
