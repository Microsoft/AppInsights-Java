/*
 * ApplicationInsights-Java
 * Copyright (c) Microsoft Corporation
 * All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the ""Software""), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

apply from: "$buildScriptsDir/common-java.gradle"

import com.microsoft.applicationinsights.build.tasks.PropsFileGen

def sourceOriginFileDir = "$project.buildDir/src/main/resources"
task generateSourceOriginProperties() {
    Properties props = new Properties()
    props.setProperty "git.commit", System.env.'GIT_COMMIT' ?: "unknown"
    props.setProperty "git.branch", System.env.'GIT_BRANCH' ?: "unknown"
    props.setProperty "git.repo", System.env.'GIT_URL' ?: "unknown"

    File targetFile = new File(sourceOriginFileDir, "source-origin.properties")
    def targetDir = targetFile.getParentFile()
    targetDir.mkdirs()
    FileOutputStream out = new FileOutputStream(targetFile.getAbsolutePath())
    props.store out, "Git source information"
    out.close()
}

processResources.dependsOn generateSourceOriginProperties

jar {
    version = '1.0'
    baseName = 'samples'
}

dependencies {
    compile project(':core')
    compile project(':logging:log4j1_2')
    compile project(':logging:log4j2')
    compile project(':logging:logback')

    testCompile group: 'junit', name: 'junit', version: '4.11'
}
